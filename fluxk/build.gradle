buildscript {
	ext {
		kotlinVersion = '1.3.10'
		springBootVersion = '2.1.0.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
	}
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'kotlin-kapt'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'maeda.demo'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
compileKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "1.8"
	}
}
compileTestKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "1.8"
	}
}

repositories {
	mavenCentral()
}


ext {
	springBootAdminVersion = '2.1.1'
}

def arrow_version = "0.8.1"
dependencies {
	implementation('org.springframework.boot:spring-boot-starter-actuator')
	implementation('org.springframework.boot:spring-boot-starter-webflux')
	implementation('org.springframework.boot:spring-boot-starter-web')
	implementation('org.springframework.boot:spring-boot-starter-security')
	implementation('com.fasterxml.jackson.module:jackson-module-kotlin')
	implementation('de.codecentric:spring-boot-admin-starter-server')
	implementation('de.codecentric:spring-boot-admin-starter-client')
	implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
	implementation("org.jetbrains.kotlin:kotlin-reflect")
	// https://mvnrepository.com/artifact/org.jetbrains.kotlinx/kotlinx-coroutines-core
	compile group: 'org.jetbrains.kotlinx', name: 'kotlinx-coroutines-core', version: '1.0.1'
// https://mvnrepository.com/artifact/org.jetbrains.kotlinx/kotlinx-coroutines-reactor
	compile group: 'org.jetbrains.kotlinx', name: 'kotlinx-coroutines-reactor', version: '1.0.1'


	compile("io.arrow-kt:arrow-core:$arrow_version")
	compile("io.arrow-kt:arrow-syntax:$arrow_version")
	compile("io.arrow-kt:arrow-typeclasses:$arrow_version")
	compile("io.arrow-kt:arrow-data:$arrow_version")
	compile("io.arrow-kt:arrow-instances-core:$arrow_version")
	compile("io.arrow-kt:arrow-instances-data:$arrow_version")
	//kapt( "io.arrow-kt:arrow-annotations-processor:$arrow_version")

	compile("io.arrow-kt:arrow-free:$arrow_version") //optional
	compile("io.arrow-kt:arrow-instances-free:$arrow_version") //optional
	compile("io.arrow-kt:arrow-mtl:$arrow_version") //optional
	compile("io.arrow-kt:arrow-effects:$arrow_version") //optional
	compile("io.arrow-kt:arrow-effects-instances:$arrow_version") //optional
	compile("io.arrow-kt:arrow-effects-rx2:$arrow_version") //optional
	compile "io.arrow-kt:arrow-effects-reactor:$arrow_version" //optional
	compile "io.arrow-kt:arrow-effects-reactor-instances:$arrow_version" //optional


	runtimeOnly('org.springframework.boot:spring-boot-devtools')
	testImplementation('org.springframework.boot:spring-boot-starter-test')
	testImplementation('io.projectreactor:reactor-test')
}

dependencyManagement {
	imports {
		mavenBom "de.codecentric:spring-boot-admin-dependencies:${springBootAdminVersion}"
	}
}
